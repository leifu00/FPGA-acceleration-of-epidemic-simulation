var areaJSON='{"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "MLABs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[55.8584, 39.142, 20.8189, 59.1965, 0], "total":[301009, 355754, 1606, 0, 1671], "name":"Kernel System", "max_resources":[854400, 1708800, 2713, 1518, 42720], "children":[{"name":"Static Partition", "type":"partition", "children":[{"name":"Board interface", "type":"resource", "data":[134500, 172452, 397, 0, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}]}, {"name":"Global interconnect", "type":"resource", "data":[14572, 17570, 104, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 10 global loads and 0 global stores. Reduce number of global loads and stores to simplify global interconnect."}, {"type":"brief", "text":"For 10 global loads and 0 global stores."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Global Memory Interconnect", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}]}]}, {"name":"System description ROM", "type":"resource", "data":[0, 67, 2, 0, 0], "details":[{"type":"text", "text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program."}, {"type":"brief", "text":"Contains information for the host."}]}, {"name":"infect_sweep", "compute_units":1, "type":"function", "total_percent":[28.931, 21.6944, 9.69481, 40.6561, 0], "total_kernel_resources":[151937, 165665, 1103, 0, 1671], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"text", "text":"The following loop is nested at depth greater than 3. Reducing the depth of this nested loop will save area:", "details":[{"type":"text", "text":"%L with depth 4", "links":[{"filename":"device/main.cl", "line":"203"}]}]}, {"type":"brief", "text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.\\n1 loop nested 3 levels deep or more."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1072, 2225, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Private Variable: \\n - \'i2\' (main.cl:203)", "type":"resource", "data":[7, 36, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":203}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 1 (depth was increased by a factor of 413 due to a loop initiation interval of 413.)"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 1 depth"}]}, {"name":"main.cl:174 (c)", "type":"resource", "data":[0, 0, 0, 0, 1639], "debug":[[{"filename":"device/main.cl", "line":174}]], "details":[{"type":"table", "Private memory":"Stall-Free", "Requested size":"4004 bytes", "Implemented size":"4096 bytes", "Number of banks":"1", "Bank width":"32768 bits", "Bank depth":"1 word", "Total replication":"1", "Additional information":[{"type":"text", "text":"Requested size 4004 bytes, implemented size 4096 bytes, stall-free, 2 reads and 1 write. "}, {"type":"text", "text":"Reducing accesses to exactly one read and one write for all on-chip memory systems may increase overall system performance."}, {"type":"text", "text":"Private memory implemented in on-chip block RAM."}], "Reference":[{"type":"text", "text":"See %L for more information.", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}, {"type":"brief", "text":"Stall-Free,\\n4004B requested,\\n4096B implemented."}]}, {"name":"infect_sweep.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[18, 96, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[18, 96, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[8, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[8, 2, 0, 0, 0]}]}, {"name":"Computation", "type":"resource", "children":[]}]}, {"name":"infect_sweep.B1", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"main.cl:270", "type":"resource", "data":[5, 8, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":270}]]}]}]}, {"name":"infect_sweep.B2", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[150, 32353, 0, 0, 2], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[146, 32284, 0, 0, 2]}, {"name":"main.cl:167", "type":"resource", "data":[4, 36, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":167}]]}, {"name":"main.cl:178", "type":"resource", "data":[0, 33, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":178}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[7, 5, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"main.cl:167", "type":"resource", "data":[32, 32, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":167}]], "children":[{"name":"32-bit Select", "type":"resource", "count":1, "data":[32, 32, 0, 0, 0]}], "replace_name":"true"}, {"name":"main.cl:174", "type":"resource", "data":[132742, 107220, 832, 0, 0], "debug":[[{"filename":"device/main.cl", "line":174}]], "children":[{"name":"Load", "type":"resource", "count":4, "data":[132708, 107196, 832, 0, 0], "details":[{"type":"brief", "text":"Burst-coalesced non-aligned LSU"}, {"type":"text", "text":"Load uses a Burst-coalesced non-aligned LSU.  Use Dynamic Profiler to determine performance impact of this LSU."}]}, {"name":"Store", "type":"resource", "count":1, "data":[34, 24, 0, 0, 0], "details":[{"type":"text", "text":"Store uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free write to memory declared on %L.", "links":[{"filename":"device/main.cl", "line":"174"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}, {"name":"main.cl:178", "type":"resource", "data":[61, 42, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":178}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[26, 41, 0, 0, 0], "details":[{"type":"text", "text":"Load uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free read from memory declared on %L.", "links":[{"filename":"device/main.cl", "line":"174"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}]}]}, {"name":"infect_sweep.B3", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[1, 32, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"main.cl:167", "type":"resource", "data":[1, 32, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":167}]]}]}, {"name":"Computation", "type":"resource", "children":[{"name":"main.cl:167", "type":"resource", "data":[67, 1, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":167}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"infect_sweep.B4", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[49, 307, 0, 0, 2], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[47, 175, 0, 0, 2]}, {"name":"main.cl:178", "type":"resource", "data":[0, 32, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":178}]]}, {"name":"main.cl:183", "type":"resource", "data":[1, 33, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":183}]]}, {"name":"main.cl:184", "type":"resource", "data":[1, 33, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":184}]]}, {"name":"main.cl:203", "type":"resource", "data":[0, 34, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":203}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[7, 5, 0, 0, 4], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[1, 1, 0, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 1, 0, 0, 0]}]}, {"name":"main.cl:178", "type":"resource", "data":[16, 0, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":178}]], "children":[{"name":"32-bit Select", "type":"resource", "count":1, "data":[16, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"main.cl:180", "type":"resource", "data":[26, 41, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":180}]], "children":[{"name":"Load", "type":"resource", "count":1, "data":[26, 41, 0, 0, 0], "details":[{"type":"text", "text":"Load uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free read from memory declared on %L.", "links":[{"filename":"device/main.cl", "line":"174"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}, {"name":"main.cl:181", "type":"resource", "data":[2420, 2995, 42, 0, 0], "debug":[[{"filename":"device/main.cl", "line":181}]], "children":[{"name":"Load", "type":"resource", "count":1, "data":[2420, 2995, 42, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced cached LSU.  Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}, {"type":"brief", "text":"Burst-coalesced cached LSU,\\nLoad with a private 512 kilobit cache"}]}], "replace_name":"true"}, {"name":"main.cl:183", "type":"resource", "data":[1516, 2165.5, 21, 0, 0], "debug":[[{"filename":"device/main.cl", "line":183}]], "children":[{"name":"Load", "type":"resource", "count":1, "data":[1516, 2165.5, 21, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced cached LSU.  Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}, {"type":"brief", "text":"Burst-coalesced cached LSU,\\nLoad with a private 512 kilobit cache"}]}], "replace_name":"true"}, {"name":"main.cl:184", "type":"resource", "data":[1548, 2165.5, 21, 0, 0], "debug":[[{"filename":"device/main.cl", "line":184}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[1516, 2165.5, 21, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced cached LSU.  Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}, {"type":"brief", "text":"Burst-coalesced cached LSU,\\nLoad with a private 512 kilobit cache"}]}], "replace_name":"true"}, {"name":"main.cl:201", "type":"resource", "data":[6, 0, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":201}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"16-bit Integer Compare", "type":"resource", "count":1, "data":[5, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"main.cl:203", "type":"resource", "data":[1836, 1692, 42, 0, 0], "debug":[[{"filename":"device/main.cl", "line":203}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[1800, 1691, 42, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced cached LSU.  Load with a private 1024 bit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}, {"type":"brief", "text":"Burst-coalesced cached LSU,\\nLoad with a private 1024 bit cache"}]}], "replace_name":"true"}]}]}, {"name":"infect_sweep.B5", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[1, 96, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"main.cl:201", "type":"resource", "data":[0, 32, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":201}]]}, {"name":"main.cl:205", "type":"resource", "data":[1, 64, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":205}]]}]}, {"name":"Computation", "type":"resource", "children":[{"name":"main.cl:201", "type":"resource", "data":[58, 0, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":201}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[26, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"infect_sweep.B6", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[35, 97, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[33, 65, 0, 0, 0]}, {"name":"main.cl:178", "type":"resource", "data":[2, 32, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":178}]]}]}, {"name":"Computation", "type":"resource", "children":[{"name":"main.cl:178", "type":"resource", "data":[70, 1, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":178}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}, {"name":"FFwd Destination", "type":"resource", "count":3, "data":[2, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"infect_sweep.B7", "type":"basicblock", "children":[{"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}]}, {"name":"main.cl:201", "type":"resource", "data":[37, 1, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":201}]], "children":[{"name":"1-bit And", "type":"resource", "count":2, "data":[2, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}], "replace_name":"true"}, {"name":"main.cl:203", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":203}]], "children":[{"name":"FFwd Destination", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"infect_sweep.B8", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[531, 891, 19, 0, 1], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[530, 890, 19, 0, 1]}, {"name":"main.cl:207", "type":"resource", "data":[1, 1, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":207}]]}]}, {"name":"Feedback", "type":"resource", "data":[88, 233, 0, 0, 1], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[8, 36, 0, 0, 0]}, {"name":"main.cl:201", "type":"resource", "data":[8, 36, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":201}]]}, {"name":"main.cl:203", "type":"resource", "data":[72, 161, 0, 0, 1], "debug":[[{"filename":"device/main.cl", "line":203}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[84, 50, 0, 0, 11], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"main.cl:203", "type":"resource", "data":[112, 4, 0, 0, 0], "debug":[[{"filename":"device/main.cl", "line":203}]], "children":[{"name":"1-bit And", "type":"resource", "count":5, "data":[5, 1, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":7, "data":[4, 0, 0, 0, 0]}, {"name":"17-bit Select", "type":"resource", "count":1, "data":[14, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":2, "data":[48, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}, {"name":"FFwd Destination", "type":"resource", "count":5, "data":[2, 0, 0, 0, 0]}, {"name":"Iteration Initiation", "type":"resource", "count":1, "data":[4, 2, 0, 0, 0]}], "replace_name":"true"}, {"name":"main.cl:205", "type":"resource", "data":[3075, 4300, 42, 0, 0], "debug":[[{"filename":"device/main.cl", "line":205}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[3040, 4299, 42, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced cached LSU.  Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}, {"type":"brief", "text":"Burst-coalesced cached LSU,\\nLoad with a private 512 kilobit cache"}]}], "replace_name":"true"}, {"name":"main.cl:207", "type":"resource", "data":[6249, 8568, 84, 0, 0], "debug":[[{"filename":"device/main.cl", "line":207}]], "children":[{"name":"1-bit And", "type":"resource", "count":3, "data":[3, 0, 0, 0, 0]}, {"name":"16-bit Integer Compare", "type":"resource", "count":2, "data":[38, 2, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":2, "data":[48, 0, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":2, "data":[6160, 8566, 84, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced cached LSU.  Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}, {"type":"brief", "text":"Burst-coalesced cached LSU,\\nLoad with a private 512 kilobit cache"}]}], "replace_name":"true"}]}]}]}]}';
var area_srcJSON='{"children":[{"children":[{"data":[134500,172452,397,0,0],"details":[{"text":"Platform interface logic.","type":"text"}],"name":"Board interface","type":"resource"}],"name":"Static Partition","type":"partition"},{"data":[14572,17570,104,0,0],"details":[{"text":"Global interconnect for 10 global loads and 0 global stores. Reduce number of global loads and stores to simplify global interconnect.","type":"text"},{"text":"For 10 global loads and 0 global stores.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Global Memory Interconnect","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}],"text":"See %L for more information","type":"text"}],"name":"Global interconnect","type":"resource"},{"data":[0,67,2,0,0],"details":[{"text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program.","type":"text"},{"text":"Contains information for the host.","type":"brief"}],"name":"System description ROM","type":"resource"},{"children":[{"data":[199,303,0,0,17],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1072,2225,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[7,36,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 1 (depth was increased by a factor of 413 due to a loop initiation interval of 413.)","type":"text"},{"text":"Register,\\n1 reg, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'i2\' (main.cl:203)","type":"resource"},{"data":[0,0,0,0,1639],"details":[{"Additional information":[{"text":"Requested size 4004 bytes, implemented size 4096 bytes, stall-free, 2 reads and 1 write. ","type":"text"},{"text":"Reducing accesses to exactly one read and one write for all on-chip memory systems may increase overall system performance.","type":"text"},{"text":"Private memory implemented in on-chip block RAM.","type":"text"}],"Bank depth":"1 word","Bank width":"32768 bits","Implemented size":"4096 bytes","Number of banks":1,"Private memory":"Stall-Free","Reference":[{"links":[{"guide":"Best Practices Guide : Local Memory","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}],"text":"See %L for more information.","type":"text"}],"Requested size":"4004 bytes","Total replication":1,"type":"table"},{"text":"Stall-Free,\\n4004B requested,\\n4096B implemented.","type":"brief"}],"name":"main.cl:174 (c)","type":"resource"},{"children":[{"count":5,"data":[774,33510,19,0,5],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"},{"count":2,"data":[2,1,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit And","type":"resource"}],"data":[776,33511,19,0,5],"name":"No Source Line","type":"resource"},{"children":[{"count":2,"data":[5,68,0,0,0],"debug":[[{"filename":"device/main.cl","line":167}]],"name":"State","type":"resource"},{"count":1,"data":[32,32,0,0,0],"debug":[[{"filename":"device/main.cl","line":167}]],"name":"32-bit Select","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":167}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"device/main.cl","line":167}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[104,101,0,0,0],"debug":[[{"filename":"device/main.cl","line":167}]],"name":"device/main.cl:167","type":"resource"},{"children":[{"count":3,"data":[2,97,0,0,0],"debug":[[{"filename":"device/main.cl","line":178}]],"name":"State","type":"resource"},{"count":2,"data":[70,2,0,0,0],"debug":[[{"filename":"device/main.cl","line":178}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[26,41,0,0,0],"debug":[[{"filename":"device/main.cl","line":178}]],"name":"Load","type":"resource"},{"count":1,"data":[16,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":178}]],"name":"32-bit Select","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":178}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":178}]],"name":"32-bit Integer Add","type":"resource"},{"count":3,"data":[2,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":178}]],"name":"FFwd Destination","type":"resource"}],"data":[149,140,0,0,0],"debug":[[{"filename":"device/main.cl","line":178}]],"name":"device/main.cl:178","type":"resource"},{"children":[{"count":4,"data":[132708,107196,832,0,0],"debug":[[{"filename":"device/main.cl","line":174}]],"name":"Load","type":"resource"},{"count":1,"data":[34,24,0,0,0],"debug":[[{"filename":"device/main.cl","line":174}]],"name":"Store","type":"resource"}],"data":[132742,107220,832,0,0],"debug":[[{"filename":"device/main.cl","line":174}]],"name":"device/main.cl:174","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,33,0,0,0],"debug":[[{"filename":"device/main.cl","line":183}]],"name":"State","type":"resource"},{"count":1,"data":[1516,2165.5,21,0,0],"debug":[[{"filename":"device/main.cl","line":183}]],"name":"Load","type":"resource"}],"data":[1517,2198.5,21,0,0],"debug":[[{"filename":"device/main.cl","line":183}]],"name":"device/main.cl:183","type":"resource"},{"children":[{"count":1,"data":[1,33,0,0,0],"debug":[[{"filename":"device/main.cl","line":184}]],"name":"State","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":184}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[1516,2165.5,21,0,0],"debug":[[{"filename":"device/main.cl","line":184}]],"name":"Load","type":"resource"}],"data":[1549,2198.5,21,0,0],"debug":[[{"filename":"device/main.cl","line":184}]],"name":"device/main.cl:184","type":"resource"},{"children":[{"count":1,"data":[0,34,0,0,0],"debug":[[{"filename":"device/main.cl","line":203}]],"name":"State","type":"resource"},{"count":6,"data":[6,1,0,0,0],"debug":[[{"filename":"device/main.cl","line":203}]],"name":"1-bit And","type":"resource"},{"count":2,"data":[70,2,0,0,0],"debug":[[{"filename":"device/main.cl","line":203}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[1800,1691,42,0,0],"debug":[[{"filename":"device/main.cl","line":203}]],"name":"Load","type":"resource"},{"count":6,"data":[3,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":203}]],"name":"FFwd Destination","type":"resource"},{"count":7,"data":[4,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":203}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[14,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":203}]],"name":"17-bit Select","type":"resource"},{"count":2,"data":[48,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":203}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[4,2,0,0,0],"debug":[[{"filename":"device/main.cl","line":203}]],"name":"Iteration Initiation","type":"resource"}],"data":[1949,1730,42,0,0],"debug":[[{"filename":"device/main.cl","line":203}]],"name":"device/main.cl:203","type":"resource"},{"children":[{"count":1,"data":[26,41,0,0,0],"debug":[[{"filename":"device/main.cl","line":180}]],"name":"Load","type":"resource"}],"data":[26,41,0,0,0],"debug":[[{"filename":"device/main.cl","line":180}]],"name":"device/main.cl:180","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[2420,2995,42,0,0],"debug":[[{"filename":"device/main.cl","line":181}]],"name":"Load","type":"resource"}],"data":[2420,2995,42,0,0],"debug":[[{"filename":"device/main.cl","line":181}]],"name":"device/main.cl:181","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":201}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[5,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":201}]],"name":"16-bit Integer Compare","type":"resource"},{"count":1,"data":[0,32,0,0,0],"debug":[[{"filename":"device/main.cl","line":201}]],"name":"State","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":201}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[26,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":201}]],"name":"32-bit Select","type":"resource"},{"count":2,"data":[2,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":201}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"device/main.cl","line":201}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[101,33,0,0,0],"debug":[[{"filename":"device/main.cl","line":201}]],"name":"device/main.cl:201","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,64,0,0,0],"debug":[[{"filename":"device/main.cl","line":205}]],"name":"State","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"device/main.cl","line":205}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[3040,4299,42,0,0],"debug":[[{"filename":"device/main.cl","line":205}]],"name":"Load","type":"resource"}],"data":[3076,4364,42,0,0],"debug":[[{"filename":"device/main.cl","line":205}]],"name":"device/main.cl:205","type":"resource"},{"children":[{"count":1,"data":[1,1,0,0,0],"debug":[[{"filename":"device/main.cl","line":207}]],"name":"State","type":"resource"},{"count":3,"data":[3,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":207}]],"name":"1-bit And","type":"resource"},{"count":2,"data":[38,2,0,0,0],"debug":[[{"filename":"device/main.cl","line":207}]],"name":"16-bit Integer Compare","type":"resource"},{"count":2,"data":[48,0,0,0,0],"debug":[[{"filename":"device/main.cl","line":207}]],"name":"32-bit Integer Add","type":"resource"},{"count":2,"data":[6160,8566,84,0,0],"debug":[[{"filename":"device/main.cl","line":207}]],"name":"Load","type":"resource"}],"data":[6250,8569,84,0,0],"debug":[[{"filename":"device/main.cl","line":207}]],"name":"device/main.cl:207","type":"resource"}],"compute_units":1,"data":[151937,165665,1103,0,1671],"debug":[[{"filename":"device/main.cl","line":174}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"details":[{"links":[{"filename":"device/main.cl","line":203}],"text":"%L with depth 4","type":"text"}],"text":"The following loop is nested at depth greater than 3. Reducing the depth of this nested loop will save area:","type":"text"},{"text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.\\n1 loop nested 3 levels deep or more.","type":"brief"}],"name":"infect_sweep","total_kernel_resources":[151937,165665,1103,0,1671],"total_percent":[28.931,21.6944,9.69481,40.6561,0],"type":"function"}],"columns":["","ALUTs","FFs","RAMs","DSPs","MLABs","Details"],"data":[166509,183302,1209,0,1671],"debug_enabled":"true","max_resources":[854400,1708800,2713,1518,42720],"name":"Kernel System","total":[301009,355754,1606,0,1671],"total_percent":[55.8584,39.142,20.8189,59.1965,0],"type":"module"}';
var mavJSON='{"nodes":[{"type":"kernel", "id":2, "name":"infect_sweep", "children":[{"type":"bb", "id":3, "name":"infect_sweep.B0", "details":[{"type":"table", "Latency":"2"}]}, {"type":"bb", "id":4, "name":"infect_sweep.B1", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":5, "name":"infect_sweep.B2", "children":[{"type":"inst", "id":12, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":174}]], "details":[{"type":"table", "Width":"8192 bits", "Type":"Burst-coalesced non-aligned", "Stall-free":"No", "Start Cycle":"4", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":13, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":174}]], "details":[{"type":"table", "Width":"8192 bits", "Type":"Burst-coalesced non-aligned", "Stall-free":"No", "Start Cycle":"4", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":14, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":174}]], "details":[{"type":"table", "Width":"8192 bits", "Type":"Burst-coalesced non-aligned", "Stall-free":"No", "Start Cycle":"4", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":15, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":174}]], "details":[{"type":"table", "Width":"8192 bits", "Type":"Burst-coalesced non-aligned", "Stall-free":"No", "Start Cycle":"4", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":16, "name":"Store", "debug":[[{"filename":"device/main.cl", "line":174}]], "details":[{"type":"table", "Width":"32768 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"c", "Start Cycle":"7", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":17, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":178}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"c", "Start Cycle":"8", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":25, "name":"Loop Input", "debug":[[{"filename":"device/main.cl", "line":167}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"6"}]}, {"type":"inst", "id":26, "name":"End", "details":[{"type":"table", "Start Cycle":"15", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"15", "II":"0", "Subloops":"Yes", "Pipelined":"No", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. "}]}, {"type":"bb", "id":6, "name":"infect_sweep.B3", "details":[{"type":"table", "Latency":"0", "II":"0", "Subloops":"Yes", "Pipelined":"No", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":7, "name":"infect_sweep.B4", "children":[{"type":"inst", "id":18, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":180}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"c", "Start Cycle":"3", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":19, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":181}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"11", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":20, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":183}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"13", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":21, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":203}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Loads from":"P", "Start Cycle":"15", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":27, "name":"Loop Input", "debug":[[{"filename":"device/main.cl", "line":178}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"9"}]}, {"type":"inst", "id":28, "name":"End", "details":[{"type":"table", "Start Cycle":"17", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"17", "II":"0", "Subloops":"Yes", "Pipelined":"No", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. "}]}, {"type":"bb", "id":8, "name":"infect_sweep.B5", "details":[{"type":"table", "Latency":"1", "II":"0", "Subloops":"Yes", "Pipelined":"No", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"10"}]}, {"type":"bb", "id":9, "name":"infect_sweep.B6", "details":[{"type":"table", "Latency":"1", "II":"0", "Subloops":"Yes", "Pipelined":"No", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":10, "name":"infect_sweep.B7", "details":[{"type":"table", "Latency":"0", "II":"0", "Subloops":"Yes", "Pipelined":"No", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":11, "name":"infect_sweep.B8", "children":[{"type":"inst", "id":22, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":205}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"420", "Latency":"137", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":23, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":207}]], "details":[{"type":"table", "Width":"16 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"559", "Latency":"132", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":24, "name":"Load", "debug":[[{"filename":"device/main.cl", "line":207}]], "details":[{"type":"table", "Width":"16 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"692", "Latency":"132", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":29, "name":"Loop Input", "debug":[[{"filename":"device/main.cl", "line":203}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"30"}]}, {"type":"inst", "id":30, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"826", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"826", "II":"413", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Loop is pipelined with II of 413. See Loops Analysis for more information."}]}, {"type":"memtype", "id":31, "name":"Local Memory", "children":[{"type":"memsys", "id":32, "name":"c", "debug":[[{"filename":"device/main.cl", "line":174}]], "details":[{"type":"table", "details":[{"type":"brief", "text":"4004B requested\\n4096B implemented"}], "Requested size":"4004 bytes", "Implemented size":"4096 bytes", "Number of banks":"1", "Bank width":"32768 bits", "Bank depth":"1 word", "Total replication":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}]}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":37, "name":"DDR", "details":[{"type":"table", "Number of banks":"2"}]}]}], "links":[{"from":32, "to":17}, {"from":32, "to":18}, {"from":16, "to":32}, {"from":6, "to":4}, {"from":6, "to":25}, {"from":3, "to":25}, {"from":12, "to":26}, {"from":13, "to":26}, {"from":14, "to":26}, {"from":15, "to":26}, {"from":16, "to":26}, {"from":17, "to":26}, {"from":9, "to":6}, {"from":9, "to":27}, {"from":26, "to":27}, {"from":18, "to":28}, {"from":19, "to":28}, {"from":20, "to":28}, {"from":21, "to":28}, {"from":10, "to":8}, {"from":28, "to":8}, {"from":10, "to":9}, {"from":30, "to":10}, {"from":30, "to":29}, {"from":8, "to":29}, {"from":22, "to":30}, {"from":23, "to":30}, {"from":24, "to":30}, {"from":25, "to":12}, {"from":25, "to":13}, {"from":25, "to":14}, {"from":25, "to":15}, {"from":12, "to":16}, {"from":13, "to":16}, {"from":14, "to":16}, {"from":15, "to":16}, {"from":12, "to":17}, {"from":13, "to":17}, {"from":14, "to":17}, {"from":15, "to":17}, {"from":27, "to":18}, {"from":18, "to":19}, {"from":19, "to":20}, {"from":20, "to":21}, {"from":29, "to":22}, {"from":22, "to":23}, {"from":22, "to":24}, {"from":23, "to":24}, {"from":37, "to":20}, {"from":37, "to":12}, {"from":37, "to":14}, {"from":37, "to":22}, {"from":37, "to":21}, {"from":37, "to":15}, {"from":37, "to":19}, {"from":37, "to":24}, {"from":37, "to":23}, {"from":37, "to":13}]}';
var loopsJSON='{"columns":["", "Pipelined", "II", "Speculated iterations", "Details"], "children":[{"name":"Kernel: infect_sweep", "data":["", "", ""], "debug":[[{"filename":"device/main.cl", "line":156}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"infect_sweep.B2", "data":["No", "n/a", "n/a"], "debug":[[{"filename":"device/main.cl", "line":167}]], "details":[{"type":"brief", "text":"Out-of-order inner loop"}, {"type":"text", "text":"Loop not pipelined due to:", "details":[{"type":"text", "text":"Loop iteration ordering: iterations of inner loop shown may get out of order with respect to the listed inner loop, as the number of iterations of the listed inner loop may be different for different iterations of this loop.", "details":[{"type":"text", "text":"infect_sweep.B5 (%L)", "links":[{"filename":"device/main.cl", "line":"201"}]}, {"type":"text", "text":"infect_sweep.B4 (%L)", "links":[{"filename":"device/main.cl", "line":"178"}]}]}]}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: 1 due to not being pipelined"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"infect_sweep.B4", "data":["No", "n/a", "n/a"], "debug":[[{"filename":"device/main.cl", "line":178}]], "details":[{"type":"brief", "text":"Out-of-order inner loop"}, {"type":"text", "text":"Loop not pipelined due to:", "details":[{"type":"text", "text":"Loop iteration ordering: iterations of inner loop shown may get out of order with respect to the listed inner loop, as the number of iterations of the listed inner loop may be different for different iterations of this loop.", "details":[{"type":"text", "text":"infect_sweep.B5 (%L)", "links":[{"filename":"device/main.cl", "line":"201"}]}]}]}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: 1 due to not being pipelined"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"infect_sweep.B5", "data":["No", "n/a", "n/a"], "debug":[[{"filename":"device/main.cl", "line":201}]], "details":[{"type":"brief", "text":"Unresolvable exit condition"}, {"type":"text", "text":"Loop not pipelined due to:", "details":[{"type":"text", "text":"Loop exit condition unresolvable at iteration initiation."}]}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: 1 due to not being pipelined"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"infect_sweep.B8", "data":["Yes", "~413", "n/a"], "debug":[[{"filename":"device/main.cl", "line":203}]], "details":[{"type":"brief", "text":"Data dependency"}, {"type":"text", "text":"Most critical loop feedback path during scheduling:", "details":[{"type":"text", "text":"138.00 clock cycles Load Operation (%L)", "links":[{"filename":"device/main.cl", "line":"205"}]}, {"type":"text", "text":"133.00 clock cycles Load Operation (%L)", "links":[{"filename":"device/main.cl", "line":"207"}]}, {"type":"text", "text":"133.00 clock cycles Load Operation (%L)", "links":[{"filename":"device/main.cl", "line":"207"}]}, {"type":"text", "text":"1.00 clock cycle 17-bit Select Operation (%L)", "links":[{"filename":"device/main.cl", "line":"203"}]}, {"type":"text", "text":"1.00 clock cycle 16-bit Integer Compare Operation (%L)", "links":[{"filename":"device/main.cl", "line":"207"}]}, {"type":"text", "text":"1.00 clock cycle 16-bit Integer Compare Operation (%L)", "links":[{"filename":"device/main.cl", "line":"207"}]}, {"type":"text", "text":"0.88 clock cycles 32-bit Integer Add Operation (%L)", "links":[{"filename":"device/main.cl", "line":"207"}]}, {"type":"text", "text":"0.28 clock cycles 1-bit And Operation (%L)", "links":[{"filename":"device/main.cl", "line":"203"}]}, {"type":"text", "text":"0.28 clock cycles 1-bit Or Operation (%L)", "links":[{"filename":"device/main.cl", "line":"203"}]}, {"type":"text", "text":"0.28 clock cycles 1-bit And Operation (%L)", "links":[{"filename":"device/main.cl", "line":"207"}]}, {"type":"text", "text":"0.28 clock cycles 1-bit And Operation (%L)", "links":[{"filename":"device/main.cl", "line":"203"}]}, {"type":"text", "text":"0.28 clock cycles 1-bit Or Operation (%L)", "links":[{"filename":"device/main.cl", "line":"203"}]}, {"type":"text", "text":"0.28 clock cycles 1-bit And Operation (%L)", "links":[{"filename":"device/main.cl", "line":"207"}]}, {"type":"text", "text":"0.28 clock cycles 1-bit And Operation (%L)", "links":[{"filename":"device/main.cl", "line":"207"}]}]}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"device/main.cl", "line":"205"}]}, {"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"device/main.cl", "line":"207"}]}, {"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"device/main.cl", "line":"207"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}]}]}]}]}]}';
var fmax_iiJSON='{"basicblocks":{"infect_sweep.B0":{"name":"infect_sweep.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":2, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "infect_sweep.B1":{"name":"infect_sweep.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "infect_sweep.B2":{"name":"infect_sweep.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":15, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"device/main.cl", "line":"167"}]}]}}, "infect_sweep.B3":{"name":"infect_sweep.B3", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}, "infect_sweep.B4":{"name":"infect_sweep.B4", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":17, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"device/main.cl", "line":"178"}]}]}}, "infect_sweep.B5":{"name":"infect_sweep.B5", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":1, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":3, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"device/main.cl", "line":"201"}]}]}}, "infect_sweep.B6":{"name":"infect_sweep.B6", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":1, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":2, "loop_location":{}}, "infect_sweep.B7":{"name":"infect_sweep.B7", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":3, "loop_location":{}}, "infect_sweep.B8":{"name":"infect_sweep.B8", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":413, "latency":826, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":4, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"device/main.cl", "line":"203"}]}]}}}, "functions":{"infect_sweep":{"debug":[{"filename":"device/main.cl", "line":156}], "loop_hierachy":{"infect_sweep__no_loop":["infect_sweep.B0", "infect_sweep.B1"], "infect_sweep.B2":["infect_sweep.B2", "infect_sweep.B4", "infect_sweep.B3"], "infect_sweep.B4":["infect_sweep.B4", "infect_sweep.B5", "infect_sweep.B6"], "infect_sweep.B5":["infect_sweep.B5", "infect_sweep.B8", "infect_sweep.B7"], "infect_sweep.B8":["infect_sweep.B8"]}}}}';
var summaryJSON='{"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units"], "children":[{"name":"infect_sweep", "data":["Single work-item", "No", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"device/main.cl", "line":156}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs ", "MLABs"], "children":[{"name":"infect_sweep", "data":[151937, 165665, 1103, 0, 1671], "debug":[[{"filename":"device/main.cl", "line":156}]]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[14572, 17570, 104, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[134500, 172452, 397, 0, 0]}, {"name":"System description ROM", "classes":["summary-highlight", "nohover"], "data":[0, 67, 2, 0, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[301009, 355754, 1606, 0, 1671], "data_percent":[35.2305, 20.8189, 59.1965, 0]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[854400, 1708800, 2713, 1518, 0]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[{"name":"Load uses a Burst-coalesced non-aligned LSU", "details":[{"type":"text", "text":"Use Dynamic Profiler to determine performance impact of this LSU."}], "debug":[[{"filename":"device/main.cl", "line":174}]]}, {"name":"Load uses a Burst-coalesced non-aligned LSU", "details":[{"type":"text", "text":"Use Dynamic Profiler to determine performance impact of this LSU."}], "debug":[[{"filename":"device/main.cl", "line":174}]]}, {"name":"Load uses a Burst-coalesced non-aligned LSU", "details":[{"type":"text", "text":"Use Dynamic Profiler to determine performance impact of this LSU."}], "debug":[[{"filename":"device/main.cl", "line":174}]]}, {"name":"Load uses a Burst-coalesced non-aligned LSU", "details":[{"type":"text", "text":"Use Dynamic Profiler to determine performance impact of this LSU."}], "debug":[[{"filename":"device/main.cl", "line":174}]]}, {"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"device/main.cl", "line":181}]]}, {"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"device/main.cl", "line":183}], [{"filename":"device/main.cl", "line":184}]]}, {"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 1024 bit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"device/main.cl", "line":203}]]}, {"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"device/main.cl", "line":205}]]}, {"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"device/main.cl", "line":207}]]}, {"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"device/main.cl", "line":207}]]}]}}';
var infoJSON='{"name":"Info","rows":[{"classes":["info-table"],"data":["main"],"name":"Project Name"},{"data":["Arria 10, 10AX115S2F45I2SGES, dcp_bsp:pac_a10"],"name":"Target Family, Device, Board"},{"data":["19.4.0 Build 64"],"name":"AOC Version"},{"data":[""],"name":"Quartus Version"},{"data":["aoc -rtl device/main.cl -report"],"name":"Command"},{"data":["Tue Nov 24 22:54:11 2020"],"name":"Reports Generated At"}]}';
var warningsJSON='{"rows":[{"debug":[[{"filename":"/home/u46663/agent_based_epidemic_simulation_using_fpga/main/device/main.cl","line":75}]],"details":["/home/u46663/agent_based_epidemic_simulation_using_fpga/main/device/main.cl:75:6: warning: scoped enumerations are a C++11 extension"],"name":"scoped enumerations are a C++11 extension"}]}';
var quartusJSON='{"quartusFitClockSummary":{"children":[{"details":[{"text":"This section contains a summary of the area and f<sub>MAX</sub> data generated by compiling the kernels through Quartus. \\nTo generate the data, run a Quartus compile on the project created for this design. \\nTo run the Quartus compile, please run command without flag -c, -rtl or -march=emulator","type":"text"}],"name":"Run Quartus compile to populate this section. See details for more information."}],"name":"Quartus Fit Summary"}}';
var fileJSON=[{"path":"/home/u46663/agent_based_epidemic_simulation_using_fpga/main/device/main.cl", "name":"main.cl", "has_active_debug_locs":false, "absName":"/home/u46663/agent_based_epidemic_simulation_using_fpga/main/device/main.cl", "content":"#include \"../host/src/rand.h\"\012\012#define AGE_GROUP_WIDTH 17\012\012#define HOST_TREATED(x, ts) ((Hosts[x].treat_stop_time > ts) && (Hosts[x].treat_start_time <= ts))\012#define HOST_VACCED(x, ts) (Hosts[x].vacc_start_time+P->usVaccTimeToEfficacy<=ts)\012#define HOST_VACCED_SWITCH(x) (Hosts[x].vacc_start_time >= P->usVaccTimeEfficacySwitch)\012#define HOST_ISOLATED(x, ts) ((Hosts[x].isolation_start_time + P->usCaseIsolationDelay <= ts) && (Hosts[x].isolation_start_time + P->usCaseIsolationDelay + P->usCaseIsolationDuration > ts))\012#define HOST_QUARANTINED(x, ts) ((HostsQuarantine[x].comply == 1) && (HostsQuarantine[x].start_time + P->usHQuarantineHouseDuration > ts) && (HostsQuarantine[x].start_time <= ts))\012#define PLACE_CLOSED(x, y, n) ((Places[x * n + y].close_start_time <= ts) && (Places[x * n + y].close_end_time > ts))\012#define HOST_ABSENT(x, ts) ((Hosts[x].absent_start_time <= ts) && (Hosts[x].absent_stop_time > ts))\012#define HOST_AGE_GROUP(x) (Hosts[x].age / AGE_GROUP_WIDTH)\012#define INFECT_TYPE_MASK 16\012\012struct Param\012{\012    unsigned short int usVaccTimeToEfficacy;\012    double infectiousness[10000], HouseholdDenomLookup[10000];\012    double TreatInfDrop, VaccInfDrop;\012    unsigned short int usCaseIsolationDelay, usCaseIsolationDuration;\012    unsigned short int usHQuarantineHouseDuration, usVaccTimeEfficacySwitch;\012    double CaseIsolationHouseEffectiveness;\012    double HQuarantineHouseEffect;\012    double DCTCaseIsolationHouseEffectiveness;\012    double TreatSuscDrop;\012    int PlaceTypeNum;\012    double PlaceCloseHouseholdRelContact;\012    double VaccSuscDrop2, VaccSuscDrop;\012    double EnhancedSocDistHouseholdEffectCurrent;\012    double SocDistHouseholdEffectCurrent;\012    double WAIFW_Matrix[17][17];\012    double AgeSusceptibility[17];\012    double FalsePositiveRate;\012};\012\012\012struct Cell\012{\012	int I;\012	int infected[1000]; //// pointers to people in cell. e.g. *susceptible identifies where the final susceptible member of cel is.\012};\012\012enum InfStat {\012\012//// Note - DO NOT CHANGE these definitions without accounting for \"Quarantined not Infected\" /\012//// \"Quarantined not symptomatic\" calculation: relies on value below being negative for symptomatic people.\012\012	//// Susceptible\012	InfStat_Susceptible = 0,\012	//// Neither infectious nor symptomatic (E or L).\012	InfStat_Latent = 1,\012	//// Infectious and about to become a case.\012	InfStat_InfectiousAlmostSymptomatic = -1,\012	//// Not just asymptomatic, but also will not become symptomatic (i.e. a case)\012	InfStat_InfectiousAsymptomaticNotCase = 2,\012	//// Case. Infectious and symptomatic.\012	InfStat_Case = -2,\012	//// Recovered from asymptomatic infection\012	InfStat_RecoveredFromAsymp = 3,\012	//// Recovered from symptomatic infection\012	InfStat_RecoveredFromSymp = -3,\012	//// InfStat_Recovered (will use this for abs() values) so code reads correctly\012	InfStat_Recovered = 3,\012	//// Immune at start of epidemic - used to model partially immune population. Distinct from recovered, who recovered during runtime. Doesn't take negative values.\012	InfStat_ImmuneAtStart = 4,\012	//// Dead was asymptomatic\012	InfStat_Dead_WasAsymp = 5,\012	//// Dead was symptomatic\012	InfStat_Dead_WasSymp = -5,\012	//// Dead (will use this for abs() values) so code reads correctly\012	InfStat_Dead = 5\012};\012\012//// SeverityClass definitions / labels (numbers arbitrary but must be different to each other).\012enum struct Severity {\012	//// Flag value.\012	Asymptomatic,\012	Mild,\012	ILI,\012	SARI,\012	Critical,\012	//// Recovering from Critical (not recovered yet).\012	RecoveringFromCritical,\012	//// label to avoid double counting. Not sure you need.\012	Dead,\012	//// label to avoid double counting. Not sure you need.\012	Recovered\012};\012\012\012struct Person\012{\012	int pcell;			// place cell, Cells[person->pcell] holds this person\012	int mcell;			// microcell, Mcells[person->mcell] holds this person\012	int hh;				// Household[person->hh] holds this person\012	int infector;		// If >=0, Hosts[person->infector] was who infected this person\012	unsigned short int treat_start_time, treat_stop_time, vacc_start_time;  //// set in TreatSweep function.\012	unsigned short int latent_time, isolation_start_time;\012	unsigned int digitalContactTraced;\012	unsigned short int absent_start_time, absent_stop_time;\012	short infect_type;\012	int PlaceLinks[4];\012\012	float infectiousness;\012	enum InfStat inf;\012\012	/* Changed type of these*/\012	unsigned int Travelling;\012	unsigned int age;\012	float susc;\012	unsigned int esocdist_comply;\012\012};\012\012struct Household\012{\012	int FirstPerson;\012	unsigned short int nh; // number people in household\012	unsigned short int nhr;\012};\012\012struct PersonQuarantine\012{\012	unsigned short int  comply;		// can be 0, 1, 2\012	int start_time;	// timestep quarantine is started\012};\012\012\012struct Place\012{\012	unsigned short int close_start_time, close_end_time, treat_end_time;\012};\012\012\012struct Microcell\012{\012	unsigned short socdist;\012};\012\012struct Infection\012{\012	int infector;\012	int infectee;\012	short int infect_type;\012};\012\012struct PopVar\012{\012	int inf_queue_infector[10000]; \012    int inf_queue_infectee[10000];\012    short int inf_queue_infect_type[10000];\012};\012\012\012\012__kernel void infect_sweep( __global const struct Param *restrict P,\012                            __global const struct Cell *restrict CellLookup,\012                            __global struct Person *restrict Hosts,\012                            __global const struct Household *restrict Households,\012                            __global const struct PersonQuarantine *restrict HostsQuarantine,\012                            __global const struct Place *restrict Places,                            \012                            __global const struct Microcell *restrict Mcells,\012                            __global const double *restrict Rands,                            \012                            __global struct PopVar *restrict StateT)\012{\012    #pragma unroll 1\012    for (int index = 0; index < 1000; index++) \012    {\012        // Testing data\012        int ts = 10;\012        double s5 = 0;\012        double hbeta = 0.2;\012\012        struct Cell c = CellLookup[index]; // select Cell given by index b\012        struct PopVar status = StateT[index];\012\012    \012        for (int j = 0; j < c.I; j++) \012        {\012            int ci = c.infected[j];\012            struct Person si = Hosts[ci];\012\012            int l = Households[si.hh].FirstPerson;\012            int m = l + Households[si.hh].nh;\012\012\012            double personInf = (HOST_TREATED(ci, ts) ? P->TreatInfDrop : 1.0)\012            *	(HOST_VACCED(ci, ts) ? P->VaccInfDrop : 1.0)\012            *	fabs(Hosts[ci].infectiousness)\012            *	P->infectiousness[0 - Hosts[ci].latent_time - 1];\012\012            double houseInf = ((HOST_ISOLATED(ci, ts) && (Hosts[j].digitalContactTraced != 1)) ? P->CaseIsolationHouseEffectiveness : 1.0)\012            *	((Hosts[j].digitalContactTraced==1) ? P->DCTCaseIsolationHouseEffectiveness : 1.0)\012            *	((HOST_QUARANTINED(ci, ts) && (Hosts[j].digitalContactTraced != 1) && (!(HOST_ISOLATED(ci, ts))))? P->HQuarantineHouseEffect : 1.0)\012            *	P->HouseholdDenomLookup[Households[Hosts[j].hh].nhr - 1] * personInf;\012\012            double s3 = hbeta * houseInf;\012\012            int f = 0;\012\012            for (int i3 = l; (i3 < m) && (!f); i3++)\012            {\012                for (int i2 = 0; (i2 < P->PlaceTypeNum) && (!f); i2++)\012                {\012                    if (Hosts[i3].PlaceLinks[i2] >= 0)\012                    {\012                        f = PLACE_CLOSED(i2, Hosts[i3].PlaceLinks[i2], 5);\012                    }\012                }\012            }\012\012\012            if (f) { s3 *= P->PlaceCloseHouseholdRelContact; }/* NumPCD++;}*/ //// if people in your household are absent from places, person si/ci is more infectious to them, as they spend more time at home.\012\012            for (int i3 = l; i3 < m; i3++) //// loop over all people in household (note goes from l to m - 1)\012            {\012                if ((Hosts[i3].inf == InfStat_Susceptible) && (!Hosts[i3].Travelling)) //// if people in household uninfected/susceptible and not travelling\012                {\012                    double personSusc = P->WAIFW_Matrix[HOST_AGE_GROUP(i3)][HOST_AGE_GROUP(ci)]\012                            * P->AgeSusceptibility[HOST_AGE_GROUP(i3)] * Hosts[i3].susc\012                            *	(HOST_TREATED(i3, 10) ? P->TreatSuscDrop : 1.0)\012                            *	(HOST_VACCED(i3, 10) ? (HOST_VACCED_SWITCH(i3) ? P->VaccSuscDrop2 : P->VaccSuscDrop) : 1.0);\012                    \012                    double houseSusc = personSusc\012                            * ((Mcells[Hosts[i3].mcell].socdist == 2) \012                                ? ((Hosts[i3].esocdist_comply) \012                                ? P->EnhancedSocDistHouseholdEffectCurrent \012                                : P->SocDistHouseholdEffectCurrent) : 1.0)\012                            * (Hosts[i3].digitalContactTraced == 1 ? P->DCTCaseIsolationHouseEffectiveness : 1.0);\012                    \012                    double s = s3 * houseSusc;\012\012\012                    if (s > Rands[index])\012                    {\012                        if ((P->FalsePositiveRate > 0) && (Rands[index] < P->FalsePositiveRate))\012                        {\012                            status.inf_queue_infector[j] = -1;\012                            status.inf_queue_infectee[j] = 0;\012                            status.inf_queue_infect_type[j] = 1;\012                                            \012                        } else \012                        {\012                            // Hosts[i3].infector = ci; //// assign person ci as infector of person i3\012                            \012                            //infect_type: first 4 bits store type of infection\012                            //				1= household\012                            //				2..NUM_PLACE_TYPES+1 = within-class/work-group place based transmission\012                            //				NUM_PLACE_TYPES+2..2*NUM_PLACE_TYPES+1 = between-class/work-group place based transmission\012                            //				2*NUM_PLACE_TYPES+2 = \"spatial\" transmission (spatially local random mixing)\012                            // bits >4 store the generation of infection\012\012                            short int infect_type = 1 + INFECT_TYPE_MASK * (1 + si.infect_type / INFECT_TYPE_MASK);\012                            status.inf_queue_infector[j] = ci;\012                            status.inf_queue_infectee[j] = i3;\012                            status.inf_queue_infect_type[j] = infect_type;\012                        }\012                    }\012                }\012          \012            }\012        }            \012\012\012    }\012    \012\012\012    \012}\012\012"}, {"path":"/home/u46663/agent_based_epidemic_simulation_using_fpga/main/host/src/rand.h", "name":"rand.h", "has_active_debug_locs":false, "absName":"/home/u46663/agent_based_epidemic_simulation_using_fpga/main/host/src/rand.h", "content":"#ifndef RAND_H\012#define RAND_H\012\012float rand_mt(void);\012\012#endif\012"}];